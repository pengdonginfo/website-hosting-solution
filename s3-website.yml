AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  WebsiteBucketName:
    Type: String
    Description: Enter a unique name for the S3 bucket used for website hosting
  ArtifactBucketName:
    Type: String
    Description: Enter a unique name for the S3 bucket used for artifact storage
  GitHubRepositoryName:
    Type: String
    Description: Enter the name of the public GitHub repository
  GitHubOwner:
    Type: String
    Description: Enter the GitHub repository owner's username
  OAuthToken:
    Type: String
    Description: Enter the GitHub personal access token

Resources:
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref WebsiteBucketName
      # AccessControl: PublicRead
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref WebsiteBucket
                - /*
      Bucket: !Ref WebsiteBucket

  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref ArtifactBucketName

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: PipelineRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: my-website-pipeline
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucketName
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepositoryName
                Branch: main
                PollForSourceChanges: true
                # PollingInterval: 5
                OAuthToken: !Ref OAuthToken
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: '1'
              Configuration:
                BucketName: !Ref WebsiteBucketName
                Extract: 'true'
              InputArtifacts:
                - Name: SourceOutput
              RunOrder: 1

Outputs:
  WebsiteURL:
    Value: !GetAtt WebsiteBucket.WebsiteURL
